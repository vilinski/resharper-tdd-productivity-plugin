<Configuration>
  <SharedSolutionTemplateManager>
    <LiveTemplates />
    <Surrounds />
    <FileTemplates>
      <Template uid="d7ccaba8-1fb0-4e48-8163-a44a8ca7de69" text="using System;&#xD;&#xA;using System.Collections.Generic;&#xD;&#xA;using System.Linq;&#xD;&#xA;using NUnit.Framework;&#xD;&#xA;using NUnit.Framework.SyntaxHelpers;&#xD;&#xA;using Rhino.Mocks;&#xD;&#xA;&#xD;&#xA;namespace $Namespace$&#xD;&#xA;{&#xD;&#xA;    public class $ClassName$Specs:SpecBase&lt;$ClassName$&gt;&#xD;&#xA;    {&#xD;&#xA;&#xD;&#xA;        protected override $ClassName$ SetupSUT()&#xD;&#xA;        {&#xD;&#xA;            return new $ClassName$();&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        [Test]&#xD;&#xA;        public void Should_$MehodName$()&#xD;&#xA;        {&#xD;&#xA;			$End$&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;" shortcut="" description="Unit Test" reformat="true" shortenQualifiedReferences="true">
        <Context>
          <ProjectLanguageContext language="CSharp" />
        </Context>
        <Categories />
        <Variables>
          <Variable name="Namespace" expression="getDefaultNamespace()" initialRange="0" />
          <Variable name="ClassName" expression="completeSmart()" initialRange="1" />
          <Variable name="MehodName" expression="" initialRange="0" />
          <Variable name="End" expression="" initialRange="0" />
        </Variables>
        <CustomProperties>
          <Property key="FileName" value="Class" />
          <Property key="Extension" value="cs" />
          <Property key="ValidateFileName" value="True" />
        </CustomProperties>
      </Template>
    </FileTemplates>
  </SharedSolutionTemplateManager>
</Configuration>